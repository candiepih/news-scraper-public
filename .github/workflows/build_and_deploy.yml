name: Build and Deploy Docker Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_push_images:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          # django/news-api image
          - dockerfile: ./deployment/Dockerfile 
            tag: candiepih/news-api:latest
            context: "{{defaultContext}}:news_api"
            service: news-api
          # scraper image
          - dockerfile: ./deployment/scraper.Dockerfile
            tag: candiepih/news-scraper:bot
            context: "{{defaultContext}}:scraper"
            service: scraper-bot
          # scheduler/cron image
          - dockerfile: ./deployment/cron.Dockerfile
            tag: candiepih/news-scraper:cron
            context: "{{defaultContext}}:scraper"
            service: scraper-cron

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
          version: latest

    - name: Login to DigitalOcean Container Registry
      uses: docker/login-action@v3
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ matrix.tag }}
          labels: service=${{ matrix.service }}

  deploy_apps:
    needs: build_and_push_images
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.4
        bundler-cache: true

    - name: Install Kamal and other dependencies
      run: |
          gem install specific_install
          gem specific_install https://github.com/basecamp/kamal.git

    - name: webfactory/ssh-agent
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.NEWS_SCRAPER_SSH_KEY }}

    - name: Add mask to server IPs
      run: |
        echo "::add-mask::${{ secrets.SERVER_IPS }}" 

    - name: Create .env files
      run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "APP_ENV=${{ secrets.APP_ENV }}" >> .env
          echo "API_URL=${{ secrets.API_URL }}" >> .env
          echo "MONGO_DB_NAME=${{ secrets.MONGO_DB_NAME }}" >> .env
          echo "MONGO_DB_URI=${{ secrets.MONGO_DB_URI }}" >> .env
          echo "REDIS_URI=${{ secrets.REDIS_URI }}" >> .env
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env
          echo "SCRAPYD_HOST_URL=${{ secrets.SCRAPYD_HOST_URL }}" >> .env

    - name: Push env variables
      run: |
          kamal env push -d scraper
          kamal env push -d news-api
      env: 
          SERVER_IPS: ${{ secrets.SERVER_IPS }}

    - name: Deploy the news-api service
      run: kamal deploy -d news-api --skip-push --version=latest
      env:
          KAMAL_REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
          SERVER_IPS: ${{ secrets.SERVER_IPS }}

    - name: Deploy the scraper service
      run: kamal deploy -d scraper --skip-push --version=bot
      env:
          KAMAL_REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
          SERVER_IPS: ${{ secrets.SERVER_IPS }}
